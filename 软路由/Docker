openwrt软路由下docker空间扩容教程：
https://docs.qq.com/doc/DZEVoVUh2bVFZa0pj

----------------------------------------------------

docker run -d --restart unless-stopped --privileged=true -p 5678:80 --name php-env youshandefeiyang/php-env
docker cp /root/test/migu.php php-env:/var/www/html/
http://192.168.11.1:5678/migu.php

http://192.168.11.1:5678/ghyx.php?id=CCTV1HD_6000

http://192.168.11.1:5678/ghyx.php  
  
docker run -d  --name="alist" 
-v /opt/alist/alist:/opt/alist/data 
 -v /mnt/sdb1/aria2:/myfiles/sdb1/aria2
 -v /mnt/sdb1/Tube:/myfiles/sdb1/Tube
 -v /mnt/sdc1/qbit:/myfiles/sdc1/qbit
-p 5244:5244 
--restart=always
xhofe/alist:latest

http://192.168.11.1/dav

logo:
https://gitee.com/maxusys/jojo/raw/master/Dropbox.png

样式：
<style
type="text/css"> .footer { 
display: none !important; } 
.hope-c-PJLV-ihKMwLA-css {
    height: 23px;
}
</style>

挂载： 
/myfiles/sdb1/Tube/
/myfiles/sdb1/aria2/
/myfiles/sdc1/qbit/
-------------------------------------------
 
docker run -d \
 --name metube \
 -p 8081:8081 \
 -v /mnt/sdb1/Tube:/downloads \
 -e STATE_DIR=/opt/metube:/downloads \
 --restart unless-stopped \
 alexta69/metube:latest
(STATE_DIR: path to where the queue persistence files will be saved. Defaults to /downloads/.metube in the docker image)

docker run -d \
--name=YTBlive \
-e TZ=Asia/Shanghai \
-p 8080:8080 \ 
ghcr.io/jnewland/hlstube:latest


  docker run -d \
   --name navidrome \
   -v /mnt/sdb1/Aliyun/music:/music \
   -v /opt/navidrome/data:/data \
   -p 4533:4533 \ 
   -e ND_LOGLEVEL=error \
   -e ND_ENABLETRANSCODINGCONFIG=true \
   --restart=unless-stopped \
   deluan/navidrome:latest
https://www.navidrome.org/docs/usage/configuration-options/


 docker run -d \
 --name jellyseerr \
 -e PUID=1000 \
 -e PGID=1000 \
 -e LOG_LEVEL=debug \
 -e TZ=Asia/Shanghai \
 -p 15055:5055 \
 -v /opt/jellyseerr/config:/app/config \
 --restart unless-stopped \
 fallenbagel/jellyseerr:latest
 

docker run -d \
  --name=sonarr \
  -e PUID=1000 \
  -e PGID=1000 \
  -e TZ=Asia/Shanghai \
  -p 8989:8989 \
  -v /opt/sonnarr/data:/config \
  -v /mnt/sdb1/qbit:/downloads \
  --restart unless-stopped \
  lscr.io/linuxserver/sonarr:latest
  
  docker run -d \
  --name=radarr \
  -e PUID=1000 \
  -e PGID=1000 \
  -e TZ=Asia/Shanghai \
  -p 7878:7878 \
  -v /opt/radarr/data:/config \
  -v /mnt/sdb1/qbit:/downloads \
  --restart unless-stopped \
  lscr.io/linuxserver/radarr:latest
  
  docker run -d \
  --name=transmission \
  -e TZ=Asia/Shanghai \
  -e TRANSMISSION_WEB_HOME=/combustion-release/ \
  -e PEERPORT=59178 \
  -p 9091:9091 \
  -p 51423:51423 \
  -p 51423:51423/udp \
  -e PUID=1000 \
  -e PGID=1000 \
  -v /opt/transmission:/config \
  -v /mnt/sdb1/qbit:/downloads  \
  -v /opt/transmission/watch/folder:/watch \
  --restart unless-stopped \
  lscr.io/linuxserver/transmission:latest
  
 添加Aria2 pro(最大权限，存在不同文件夹)
   docker run -d \
    --name aria2\
    --restart unless-stopped \
    --log-opt max-size=1m \
    --network host \
    -e PUID= \
    -e PGID= \
    -e RPC_SECRET=token \
    -e RPC_PORT=6800 \
    -e LISTEN_PORT=31411 \
    -v /opt/aria2:/config \
    -v /mnt/sdb1/aria2:/downloads \
    p3terx/aria2-pro
    
    
    docker run -d \
    --name ariang \
    --restart unless-stopped \
    --log-opt max-size=1m \
    -p 6880:6880 \
    p3terx/ariang
    
------------------------------------------------------
 
 docker run -d \
 --name jellyfin \
 --network host \
 -e TZ=Asia/Shanghai \
 -v /opt/jelly/config:/config \
 -v /opt/jelly/cache:/cache \
 -v /mnt/sdb1/Aliyun:/media1 \
 -v /mnt/sdb1/aria2:/media2 \
 -v /mnt/sdc1/qbit:/media3 \
 --restart=unless-stopped \
 jellyfin/jellyfin
 
每晚21:30 重启 jellyfin
30 21 * * * * docker restart jellyfin

每早6:30 重启 jellyfin
30 6 * * * * docker restart jellyfin
 
  docker run -d \
  --name=heimdall \
  -e PUID=1000 \
  -e PGID=1000 \
  -e TZ=Asia/Shanghai \
  -p 7070:80 \
  -p 8443:443 \
  -v /opt/heimdall/appdata/config:/config \
  --restart unless-stopped \
 lscr.io/linuxserver/heimdall:latest 

在管理界面 > 系统 > 计划任务，加入下面代码。
30 6 * * * docker restart jelly
明天早上6点半重启一次

*/2  * * * * docker restart YTBlive
（每隔2分钟重启一次）

12 */3 * * * docker restart YTBlive
（每隔3个小时的第12分钟重启一次）

2 */3 * * * docker restart YTBlive
（每隔3个小时的第2分钟重启一次）





-------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------

docker run -d --name rsshub -p 1200:1200 diygod/rsshub:chromium-bundled

docker run -d \
  --name=freshrss \
  -e PUID=1000 \
  -e PGID=1000 \
  -p 11080:80 \
  -v /opt/freshrss/data:/config \
  --restart unless-stopped \
  lscr.io/linuxserver/freshrss:latest


docker run -itd -p 8080:8080 --restart=always --name 4gtv 239144498/streaming  
http://192.168.11.1:8080/docs
http://192.168.11.1:8080/program.m3u

 docker run -d --name fb \
  --restart=unless-stopped \
  -e PUID=0 \
  -e PGID=0 \
  -e WEB_PORT=8082 \
  -e FB_AUTH_SERVER_ADDR=127.0.0.1 \
  -p 18082:8082 \
  -v /opt/fb/config:/config \
  -v /mnt/sdb1/qbit:/myfiles/sdb1/qbit \
  -v /mnt/sdb1/aria2:/myfiles/sdb1/aria2 \
  -v /mnt/sdb1/Tube:/myfiles/sdb1/Tube \
  --mount type=tmpfs,destination=/tmp \
  80x86/filebrowser:2.9.4-amd64


docker run -d \
 --name bark \
 -p 18080:8080 \
 -v /opt/bark/bark-data:/data
 --restart unless-stopped \
 finab/bark-server
 http://192.168.11.1:18080/

docker run -d \
  --name=tubesync \
  -e PUID=1000 \
  -e PGID=1000 \
  -e TZ=Asia/Shanghai \
  -p 14848:4848 \
  -v /opt/tubesync/tubesync-config:/config \
  -v /mnt/sdb1/qbit:/YTB  \
  --restart unless-stopped \
 ghcr.io/meeb/tubesync:latest

docker run -d \
--name=youtubedl \
-p 8084:17442 \
-v /opt/youtubedl/appdata:/app/appdata \
-v /mnt/sdb1/YTB/audio:/app/audio \
-v /mnt/sdb1/YTB/subscriptions:/app/subscriptions \
-v /opt/youtubedl/users:/app/users \
-v /mnt/sdb1/YTB/video:/app/video \
--restart always \
tzahi12345/youtubedl-material:nightly    

docker run -d \
--name=jdownloader-2 \
-p 5800:5800 \
-v /opt/jdownloader-2:/config:rw \
-v /mnt/sdb1/aria2/Downloads:/output:rw \
jlesage/jdownloader-2   
    
软路由解码
/dev/dri/card0
/dev/dri/renderD128
# cd /mnt/sdb1/aria2
 docker run -d \
 --name=jellyfin \
 -e TZ=Asia/Shanghai \
 -p 8096:8096 \
 -v /opt/docker/jellyfin/data:/config \
 -v /opt/jellyfin/cache:/cache \
 -v /mnt/sdb1/qbit:/media1 \
 -v /mnt/sdb1/aria2:/media2 \
 -v /mnt/sdb1/Aliyun:/media3 \
 --device= /dev/dri/renderD128 \
 --restart=unless-stopped \
 nyanmisaka/jellyfin

docker run -d \
  --name=jackett \
  -e PUID=1000 \
  -e PGID=1000 \
  -e TZ=Asia/Shanghai \
  -e AUTO_UPDATE=true \
  -p 9117:9117 \
  -v /opt/prowlarr:/config \
  -v /mnt/sdb1/qbit:/downloads  \
  --restart unless-stopped \
  lscr.io/linuxserver/jackett:latest
  
docker create  \
    --name=qbittorrent  \
    -e WEBUIPORT=8080  \
    -e PUID=1000 \
    -e PGID=1000 \
    -e TZ=Asia/Shanghai \
    -p 6888:6888  \
    -p 6888:6888/udp  \
    -p 8080:8080  \
    -v /opt/qbittorrent:/config  \
    -v /mnt/sdb1/qbit:/downloads  \
    --restart unless-stopped  \
    superng6/qbittorrent:latest 
    id: max
    pass:maxmax
    
  用于传入连接的端口:59178
  在QBittorrent中手动设置端口，应将其保留在49160和65534之间，因为其他程序使用了其他范围，或者它们可能被ISP阻止
   
  添加prowlarr
  docker run -d \
  --name=prowlarr \
  -e PUID=1000 \
  -e PGID=1000 \
  -e TZ=Asia/Shanghai \
  -p 9696:9696 \
  -v /opt/prowlarr/data:/config \
  --restart unless-stopped \
  lscr.io/linuxserver/prowlarr:develop
  
docker run -d \
  --name=overseerr \
  -e PUID=1000 \
  -e PGID=1000 \
  -e TZ=Asia/Shanghai \
  -p 15055:5055 \
  -v /opt/overseerr/config:/config \
  --restart unless-stopped \
  lscr.io/linuxserver/overseerr:latest
  
-p 9696:80 would expose port 80 from inside the container to be accessible from the host's IP on port 9696 outside the container
